# Generated by Django 4.0.10 on 2023-10-20 03:14

import bot.types
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('preferences', '0003_alter_preferences_id'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'country',
                'verbose_name_plural': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='üïê Created, UTC')),
                ('status', models.CharField(choices=[('WAIT', '‚è≥ Awaiting'), ('SEND', 'üì® Sending'), ('DONE', 'üé´ Done')], default='WAIT', max_length=4, verbose_name='Status')),
                ('photo_id', models.CharField(blank=True, help_text='Specified by FileID, you can get it by sending the photo you need to the bot.', max_length=128, null=True, verbose_name='Photo')),
                ('gif_id', models.CharField(blank=True, help_text='Specified by FileID, you can get it by sending the gif you need to the bot.', max_length=128, null=True, verbose_name='GIF')),
                ('message', models.TextField(max_length=1024, verbose_name='Message')),
                ('preview', models.BooleanField(default=False, verbose_name='Preview')),
                ('button', models.CharField(blank=True, max_length=256, null=True, verbose_name='Button')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Link')),
                ('receivers', models.IntegerField(blank=True, null=True, verbose_name='Receivers')),
            ],
            options={
                'verbose_name': 'post',
                'verbose_name_plural': 'posts',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
                ('answer', models.TextField(max_length=4096, verbose_name='Answer')),
            ],
            options={
                'verbose_name': 'question',
                'verbose_name_plural': 'questions',
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('preferences_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='preferences.preferences')),
                ('service_fee', models.DecimalField(decimal_places=3, default=1.0, max_digits=10, verbose_name='Service fee')),
                ('payment_api_key', models.CharField(default='-', max_length=128, verbose_name='Nowpayments API key')),
                ('user_support', models.CharField(blank=True, default=None, max_length=64, null=True, verbose_name='Support user link')),
                ('admins', models.TextField(blank=True, default=None, help_text='Admins receive notifications about new orders.<br>Several admins are specified with a space or a line break.', max_length=128, null=True, verbose_name='Admins list, ID')),
            ],
            options={
                'verbose_name': 'list',
                'verbose_name_plural': 'lists',
            },
            bases=('preferences.preferences',),
            managers=[
                ('singleton', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Texts',
            fields=[
                ('preferences_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='preferences.preferences')),
                ('start_message', bot.types.Message(default='-', max_length=4096, verbose_name='Welcome message')),
                ('profile', bot.types.Message(default='-', max_length=4096, verbose_name='Profile')),
                ('orders', bot.types.Message(default='-', max_length=4096, verbose_name='Orders')),
                ('shop_list', bot.types.Message(default='-', max_length=4096, verbose_name='Shop list')),
                ('help', bot.types.Message(default='-', max_length=4096, verbose_name='Help')),
                ('faq', bot.types.Message(default='-', max_length=4096, verbose_name='Faq')),
                ('support', bot.types.Message(default='-', max_length=4096, verbose_name='Customer support')),
                ('order_log', bot.types.Message(default='-', max_length=4096, verbose_name='Order ‚Ä¢ Log')),
                ('order_pass', bot.types.Message(default='-', max_length=4096, verbose_name='Order ‚Ä¢ Pass')),
                ('order_shop', bot.types.Message(default='-', max_length=4096, verbose_name='Order ‚Ä¢ Shop')),
                ('order_pass2', bot.types.Message(default='-', max_length=4096, verbose_name='Order ‚Ä¢ Pass2')),
                ('order_amount', bot.types.Message(default='-', max_length=4096, verbose_name='Order ‚Ä¢ Amount')),
                ('order_comment', bot.types.Message(default='-', max_length=4096, verbose_name='Order ‚Ä¢ Comment')),
                ('order_invoice', bot.types.Message(default='-', max_length=4096, verbose_name='Order ‚Ä¢ Invoice')),
                ('order_created', bot.types.Message(default='-', max_length=4096, verbose_name='Order ‚Ä¢ Created')),
                ('order_history', bot.types.Message(default='-', max_length=4096, verbose_name='Order ‚Ä¢ History')),
                ('order_full_info', bot.types.Message(default='-', max_length=4096, verbose_name='Order ‚Ä¢ Full info')),
                ('shop_full_info', bot.types.Message(default='-', max_length=4096, verbose_name='Shop ‚Ä¢ Full info')),
                ('order_status_awaiting', models.CharField(default='-', max_length=32, verbose_name='Order status ‚Ä¢ Awaiting')),
                ('order_status_declined', models.CharField(default='-', max_length=32, verbose_name='Order status ‚Ä¢ Declined')),
                ('order_status_in_progress', models.CharField(default='-', max_length=32, verbose_name='Order status ‚Ä¢ In progress')),
                ('order_status_failed', models.CharField(default='-', max_length=32, verbose_name='Order status ‚Ä¢ Failed')),
                ('order_status_done_awaiting_payment', models.CharField(default='-', max_length=32, verbose_name='Order status ‚Ä¢ Done, awaiting payment')),
                ('order_status_payed', models.CharField(default='-', max_length=32, verbose_name='Order status ‚Ä¢ Payed')),
                ('wrong_format', bot.types.Message(default='-', max_length=4096, verbose_name='Wrong format')),
                ('unknown_action', bot.types.Message(default='-', max_length=4096, verbose_name='Unknown action')),
                ('btn_profile', bot.types.Button(default='-', max_length=64, verbose_name='‚èπ Profile')),
                ('btn_orders', bot.types.Button(default='-', max_length=64, verbose_name='‚èπ Orders')),
                ('btn_shop_list', bot.types.Button(default='-', max_length=64, verbose_name='‚èπ Shop list')),
                ('btn_help', bot.types.Button(default='-', max_length=64, verbose_name='‚èπ Help')),
                ('btn_add_order', bot.types.Button(default='-', max_length=64, verbose_name='‚èπ Add order')),
                ('btn_order_history', bot.types.Button(default='-', max_length=64, verbose_name='‚èπ Order history')),
                ('btn_history_line', bot.types.Button(default='-', max_length=64, verbose_name='‚èπ History info')),
                ('btn_invoice', bot.types.Button(default='-', max_length=64, verbose_name='‚èπ Order invoice')),
                ('btn_faq', bot.types.Button(default='-', max_length=64, verbose_name='‚èπ FAQ')),
                ('btn_support', bot.types.Button(default='-', max_length=64, verbose_name='‚èπ Customer support')),
                ('btn_back', bot.types.Button(default='-', max_length=64, verbose_name='‚èπ Back')),
            ],
            options={
                'verbose_name': 'list',
                'verbose_name_plural': 'lists',
            },
            bases=('preferences.preferences',),
            managers=[
                ('singleton', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='üïê Created, UTC')),
                ('user_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=256, null=True, verbose_name='@username')),
                ('first_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='Last name')),
                ('service_fee', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='Service fee')),
                ('is_banned', models.BooleanField(default=False, verbose_name='Ban')),
                ('state', models.CharField(default=None, max_length=256, null=True)),
                ('state_data', models.TextField(default=None, max_length=16384, null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('limit', models.PositiveIntegerField(verbose_name='Limit')),
                ('quantity', models.PositiveIntegerField(verbose_name='Qty')),
                ('timeframe', models.CharField(max_length=128, verbose_name='Timeframe')),
                ('pass2', models.BooleanField(verbose_name='Pass2')),
                ('comment', models.CharField(max_length=4096, verbose_name='Comment')),
                ('available', models.BooleanField(default=True, verbose_name='Available')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.country')),
            ],
            options={
                'verbose_name': 'shop',
                'verbose_name_plural': 'shops',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='üïê Created, UTC')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount, $')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.user')),
            ],
            options={
                'verbose_name': 'payment',
                'verbose_name_plural': 'payments',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='üïê Created, UTC')),
                ('log', models.CharField(max_length=4096, verbose_name='Log')),
                ('pass1', models.CharField(max_length=4096, verbose_name='Pass')),
                ('pass2', models.CharField(default=None, max_length=4096, null=True, verbose_name='Pass2')),
                ('amount', models.PositiveIntegerField(verbose_name='Amount')),
                ('comment', models.CharField(max_length=4096, verbose_name='Comment')),
                ('status', models.CharField(choices=[('AWAITING', '‚è± Awaiting'), ('DECLINED', '‚ùå Declined'), ('IN_PROGRESS', '‚è≥ In progress'), ('FAILED', '‚õîÔ∏è Failed'), ('DONE_AWAITING_PAYMENT', 'üí≥ Done, awaiting for payment'), ('PAYED', '‚úÖ Payed')], default='AWAITING', max_length=32, verbose_name='Status')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.shop')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.user')),
            ],
            options={
                'verbose_name': 'order',
                'verbose_name_plural': 'orders',
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='üïê Created, UTC')),
                ('type', models.CharField(choices=[('TEXT', 'üÖ∞Ô∏è Text'), ('REPLY_BUTTON', '‚èπ Reply-button'), ('INLINE_BUTTON', '‚è∫ Inline-button'), ('COMMAND', '‚ú≥Ô∏è Command')], max_length=16, verbose_name='Type')),
                ('content', models.CharField(blank=True, max_length=4096, null=True, verbose_name='Content')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.user')),
            ],
            options={
                'verbose_name': 'log',
                'verbose_name_plural': 'logs',
                'ordering': ('-created',),
            },
        ),
    ]
